axis.title = element_text(size = 8),
axis.title.x = element_text(size = 8),
axis.title.y = element_text(size = 8),
text = element_text(size = 8),
#Make legend keys smaller
legend.key.size = unit(0.5, "lines"),
#Make legend text smaller
legend.text = element_text(size = 6),
#Make space between legend entries smaller
legend.spacing.y = unit(0.1, "cm"),
legend.title = element_blank(),
legend.key = element_blank(),
strip.background = element_blank(),
#Move strip label position to the left of y-axis labels
strip.placement = "outside",
legend.position = "right"
)+
labs(y = "CV (%)",
x = NULL)+
#rename x labels
scale_x_discrete(labels = c(
"hr" = "Heart rate (bpm)",
"sys" = "Systolic\nBP (mmHg)",
"dia" = "Diastolic\nBP (mmHg)"))
df_means_and_inter_cv <- df %>%
#Ensure mean calculations are carried out within each subset of data
dplyr::group_by(posture, measure_type, fp) %>%
#Calculate mean
dplyr::summarize(mean_value = mean(value),
sd_value = sd(value),
cv_value = sd_value/mean_value*100) %>%
dplyr::ungroup()
df_means_and_inter_cv %>%
ggplot(aes(x = measure_type, y = cv_value, color = fp))+
geom_point()+
facet_grid(cols = vars(posture))+
theme(
panel.background = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, linewidth = 0.1),
panel.grid.minor=element_blank(),
panel.grid.major = element_blank(),
plot.background = element_rect(fill = "white"),
axis.line = element_blank(),
axis.text.x = element_text(color = "black", size = 8),
axis.text.y = element_text(color = "black", size = 8),
axis.ticks = element_line(linewidth = 0.1),
axis.title = element_text(size = 8),
axis.title.x = element_text(size = 8),
axis.title.y = element_text(size = 8),
text = element_text(size = 8),
#Make legend keys smaller
legend.key.size = unit(0.5, "lines"),
#Make legend text smaller
legend.text = element_text(size = 6),
#Make space between legend entries smaller
legend.spacing.y = unit(0.1, "cm"),
legend.title = element_blank(),
legend.key = element_blank(),
strip.background = element_blank(),
#Move strip label position to the left of y-axis labels
strip.placement = "outside",
legend.position = "right"
)+
labs(y = "CV (%)",
x = NULL)+
#rename x labels
scale_x_discrete(labels = c(
"hr" = "Heart rate (bpm)",
"sys" = "Systolic\nBP (mmHg)",
"dia" = "Diastolic\nBP (mmHg)"))
df_means_and_intra_cv <- df %>%
#Ensure mean calculations are carried out within each subset of data
dplyr::group_by(posture, measure_type, fp) %>%
#Calculate mean
dplyr::summarize(mean_value = mean(value),
sd_value = sd(value),
cv_value = sd_value/mean_value*100) %>%
dplyr::ungroup()
df_means_and_intra_cv %>%
ggplot(aes(x = measure_type, y = cv_value, color = fp))+
geom_point()+
facet_grid(cols = vars(posture))+
theme(
panel.background = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, linewidth = 0.1),
panel.grid.minor=element_blank(),
panel.grid.major = element_blank(),
plot.background = element_rect(fill = "white"),
axis.line = element_blank(),
axis.text.x = element_text(color = "black", size = 8),
axis.text.y = element_text(color = "black", size = 8),
axis.ticks = element_line(linewidth = 0.1),
axis.title = element_text(size = 8),
axis.title.x = element_text(size = 8),
axis.title.y = element_text(size = 8),
text = element_text(size = 8),
#Make legend keys smaller
legend.key.size = unit(0.5, "lines"),
#Make legend text smaller
legend.text = element_text(size = 6),
#Make space between legend entries smaller
legend.spacing.y = unit(0.1, "cm"),
legend.title = element_blank(),
legend.key = element_blank(),
strip.background = element_blank(),
#Move strip label position to the left of y-axis labels
strip.placement = "outside",
legend.position = "right"
)+
labs(y = "CV (%)",
x = NULL)+
#rename x labels
scale_x_discrete(labels = c(
"hr" = "Heart rate (bpm)",
"sys" = "Systolic\nBP (mmHg)",
"dia" = "Diastolic\nBP (mmHg)"))
df_means_and_intra_cv %>%
ggplot(aes(x = measure_type, y = cv_value, color = fp))+
geom_point()+
facet_grid(cols = vars(posture),
labeller = as_labeller(x(lying = "Supine position",
sit = "Upright position")))+
theme(
panel.background = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, linewidth = 0.1),
panel.grid.minor=element_blank(),
panel.grid.major = element_blank(),
plot.background = element_rect(fill = "white"),
axis.line = element_blank(),
axis.text.x = element_text(color = "black", size = 8),
axis.text.y = element_text(color = "black", size = 8),
axis.ticks = element_line(linewidth = 0.1),
axis.title = element_text(size = 8),
axis.title.x = element_text(size = 8),
axis.title.y = element_text(size = 8),
text = element_text(size = 8),
#Make legend keys smaller
legend.key.size = unit(0.5, "lines"),
#Make legend text smaller
legend.text = element_text(size = 6),
#Make space between legend entries smaller
legend.spacing.y = unit(0.1, "cm"),
legend.title = element_blank(),
legend.key = element_blank(),
strip.background = element_blank(),
#Move strip label position to the left of y-axis labels
strip.placement = "outside",
legend.position = "right"
)+
labs(y = "CV (%)",
x = NULL)+
#rename x labels
scale_x_discrete(labels = c(
"hr" = "Heart rate (bpm)",
"sys" = "Systolic\nBP (mmHg)",
"dia" = "Diastolic\nBP (mmHg)"))
df_means_and_intra_cv %>%
ggplot(aes(x = measure_type, y = cv_value, color = fp))+
geom_point()+
facet_grid(cols = vars(posture),
labeller = as_labeller(c(lying = "Supine position",
sit = "Upright position")))+
theme(
panel.background = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, linewidth = 0.1),
panel.grid.minor=element_blank(),
panel.grid.major = element_blank(),
plot.background = element_rect(fill = "white"),
axis.line = element_blank(),
axis.text.x = element_text(color = "black", size = 8),
axis.text.y = element_text(color = "black", size = 8),
axis.ticks = element_line(linewidth = 0.1),
axis.title = element_text(size = 8),
axis.title.x = element_text(size = 8),
axis.title.y = element_text(size = 8),
text = element_text(size = 8),
#Make legend keys smaller
legend.key.size = unit(0.5, "lines"),
#Make legend text smaller
legend.text = element_text(size = 6),
#Make space between legend entries smaller
legend.spacing.y = unit(0.1, "cm"),
legend.title = element_blank(),
legend.key = element_blank(),
strip.background = element_blank(),
#Move strip label position to the left of y-axis labels
strip.placement = "outside",
legend.position = "right"
)+
labs(y = "CV (%)",
x = NULL)+
#rename x labels
scale_x_discrete(labels = c(
"hr" = "Heart rate (bpm)",
"sys" = "Systolic\nBP (mmHg)",
"dia" = "Diastolic\nBP (mmHg)"))
View(df_means_and_intra_cv)
df_means_and_inter_cv <- df %>%
#First calculate the mean within each fp, time and for each measure type
dplyr::group_by(posture, measure_type, fp) %>%
#Calculate mean
dplyr::summarize(mean_value = mean(value)) %>%
dplyr::ungroup()
View(df_means_and_inter_cv)
df_means_and_inter_cv <- df %>%
#First calculate the mean within each fp, time and for each measure type
dplyr::group_by(posture, measure_type, fp) %>%
#Calculate mean
dplyr::summarize(mean_value = mean(value)) %>%
dplyr::ungroup() %>%
#Then calculate inter-individual cv
dplyr::group_by(measure_type, posture) %>%
dplyr::summarize(mean = mean(mean_value),
sd = sd(mean_value),
cv = sd/mean*100)
df_means_and_inter_cv <- df %>%
#First calculate the mean within each fp, time and for each measure type
dplyr::group_by(posture, measure_type, fp) %>%
#Calculate mean
dplyr::summarize(mean_value = mean(value)) %>%
dplyr::ungroup() %>%
#Then calculate inter-individual cv
dplyr::group_by(measure_type, posture) %>%
dplyr::summarize(mean = mean(mean_value),
sd = sd(mean_value),
cv = sd/mean*100) %>%
dplyr::ungroup()
View(df_means_and_inter_cv)
df_means_and_inter_cv %>%
ggplot(aes(x = measure_type, y = cv))+
geom_point()+
facet_grid(cols = vars(posture),
labeller = as_labeller(c(lying = "Supine position",
sit = "Upright position")))+
theme(
panel.background = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, linewidth = 0.1),
panel.grid.minor=element_blank(),
panel.grid.major = element_blank(),
plot.background = element_rect(fill = "white"),
axis.line = element_blank(),
axis.text.x = element_text(color = "black", size = 8),
axis.text.y = element_text(color = "black", size = 8),
axis.ticks = element_line(linewidth = 0.1),
axis.title = element_text(size = 8),
axis.title.x = element_text(size = 8),
axis.title.y = element_text(size = 8),
text = element_text(size = 8),
#Make legend keys smaller
legend.key.size = unit(0.5, "lines"),
#Make legend text smaller
legend.text = element_text(size = 6),
#Make space between legend entries smaller
legend.spacing.y = unit(0.1, "cm"),
legend.title = element_blank(),
legend.key = element_blank(),
strip.background = element_blank(),
#Move strip label position to the left of y-axis labels
strip.placement = "outside",
legend.position = "right"
)+
labs(y = "CV (%)",
x = NULL)+
#rename x labels
scale_x_discrete(labels = c(
"hr" = "Heart rate (bpm)",
"sys" = "Systolic\nBP (mmHg)",
"dia" = "Diastolic\nBP (mmHg)"))
View(df_means_and_inter_cv)
df_means_and_inter_cv %>%
ggplot(aes(x = measure_type, y = cv))+
geom_bar()+
facet_grid(cols = vars(posture),
labeller = as_labeller(c(lying = "Supine position",
sit = "Upright position")))+
theme(
panel.background = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, linewidth = 0.1),
panel.grid.minor=element_blank(),
panel.grid.major = element_blank(),
plot.background = element_rect(fill = "white"),
axis.line = element_blank(),
axis.text.x = element_text(color = "black", size = 8),
axis.text.y = element_text(color = "black", size = 8),
axis.ticks = element_line(linewidth = 0.1),
axis.title = element_text(size = 8),
axis.title.x = element_text(size = 8),
axis.title.y = element_text(size = 8),
text = element_text(size = 8),
#Make legend keys smaller
legend.key.size = unit(0.5, "lines"),
#Make legend text smaller
legend.text = element_text(size = 6),
#Make space between legend entries smaller
legend.spacing.y = unit(0.1, "cm"),
legend.title = element_blank(),
legend.key = element_blank(),
strip.background = element_blank(),
#Move strip label position to the left of y-axis labels
strip.placement = "outside",
legend.position = "right"
)+
labs(y = "CV (%)",
x = NULL)+
#rename x labels
scale_x_discrete(labels = c(
"hr" = "Heart rate (bpm)",
"sys" = "Systolic\nBP (mmHg)",
"dia" = "Diastolic\nBP (mmHg)"))
df_means_and_inter_cv %>%
ggplot(aes(x = measure_type, y = cv))+
geom_bar(stat = "identity")+
facet_grid(cols = vars(posture),
labeller = as_labeller(c(lying = "Supine position",
sit = "Upright position")))+
theme(
panel.background = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, linewidth = 0.1),
panel.grid.minor=element_blank(),
panel.grid.major = element_blank(),
plot.background = element_rect(fill = "white"),
axis.line = element_blank(),
axis.text.x = element_text(color = "black", size = 8),
axis.text.y = element_text(color = "black", size = 8),
axis.ticks = element_line(linewidth = 0.1),
axis.title = element_text(size = 8),
axis.title.x = element_text(size = 8),
axis.title.y = element_text(size = 8),
text = element_text(size = 8),
#Make legend keys smaller
legend.key.size = unit(0.5, "lines"),
#Make legend text smaller
legend.text = element_text(size = 6),
#Make space between legend entries smaller
legend.spacing.y = unit(0.1, "cm"),
legend.title = element_blank(),
legend.key = element_blank(),
strip.background = element_blank(),
#Move strip label position to the left of y-axis labels
strip.placement = "outside",
legend.position = "right"
)+
labs(y = "CV (%)",
x = NULL)+
#rename x labels
scale_x_discrete(labels = c(
"hr" = "Heart rate (bpm)",
"sys" = "Systolic\nBP (mmHg)",
"dia" = "Diastolic\nBP (mmHg)"))
df_means_and_inter_cv %>%
ggplot(aes(x = measure_type, y = cv, fill = NA))+
geom_bar(stat = "identity")+
facet_grid(cols = vars(posture),
labeller = as_labeller(c(lying = "Supine position",
sit = "Upright position")))+
theme(
panel.background = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, linewidth = 0.1),
panel.grid.minor=element_blank(),
panel.grid.major = element_blank(),
plot.background = element_rect(fill = "white"),
axis.line = element_blank(),
axis.text.x = element_text(color = "black", size = 8),
axis.text.y = element_text(color = "black", size = 8),
axis.ticks = element_line(linewidth = 0.1),
axis.title = element_text(size = 8),
axis.title.x = element_text(size = 8),
axis.title.y = element_text(size = 8),
text = element_text(size = 8),
#Make legend keys smaller
legend.key.size = unit(0.5, "lines"),
#Make legend text smaller
legend.text = element_text(size = 6),
#Make space between legend entries smaller
legend.spacing.y = unit(0.1, "cm"),
legend.title = element_blank(),
legend.key = element_blank(),
strip.background = element_blank(),
#Move strip label position to the left of y-axis labels
strip.placement = "outside",
legend.position = "right"
)+
labs(y = "CV (%)",
x = NULL)+
#rename x labels
scale_x_discrete(labels = c(
"hr" = "Heart rate (bpm)",
"sys" = "Systolic\nBP (mmHg)",
"dia" = "Diastolic\nBP (mmHg)"))
df_means_and_inter_cv %>%
ggplot(aes(x = measure_type, y = cv), fill = NA)+
geom_bar(stat = "identity")+
facet_grid(cols = vars(posture),
labeller = as_labeller(c(lying = "Supine position",
sit = "Upright position")))+
theme(
panel.background = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, linewidth = 0.1),
panel.grid.minor=element_blank(),
panel.grid.major = element_blank(),
plot.background = element_rect(fill = "white"),
axis.line = element_blank(),
axis.text.x = element_text(color = "black", size = 8),
axis.text.y = element_text(color = "black", size = 8),
axis.ticks = element_line(linewidth = 0.1),
axis.title = element_text(size = 8),
axis.title.x = element_text(size = 8),
axis.title.y = element_text(size = 8),
text = element_text(size = 8),
#Make legend keys smaller
legend.key.size = unit(0.5, "lines"),
#Make legend text smaller
legend.text = element_text(size = 6),
#Make space between legend entries smaller
legend.spacing.y = unit(0.1, "cm"),
legend.title = element_blank(),
legend.key = element_blank(),
strip.background = element_blank(),
#Move strip label position to the left of y-axis labels
strip.placement = "outside",
legend.position = "right"
)+
labs(y = "CV (%)",
x = NULL)+
#rename x labels
scale_x_discrete(labels = c(
"hr" = "Heart rate (bpm)",
"sys" = "Systolic\nBP (mmHg)",
"dia" = "Diastolic\nBP (mmHg)"))
data <- readxl::read_xlsx(here::here('data-raw/cv_dxa_vo2.xlsx'))
df <- data %>%
tidyr::pivot_longer(
cols = -c(fp, visit),
names_to = "measurement",
values_to = "value"
)
df <- data %>%
tidyr::pivot_longer(
cols = -c(id, visit),
names_to = "measurement",
values_to = "value"
)
str(data)
df <- data %>%
dplyr::mutate(across(3:6, as.numeric()))
data <- readxl::read_xlsx(here::here('data-raw/cv_dxa_vo2.xlsx'))
df <- data %>%
tidyr::pivot_longer(
cols = -c(id, visit),
names_to = "measurement",
values_to = "value"
)
View(df)
data_centered <- data %>%
dplyr::mutate(across(c(dxa, vo2max, hr_max, ppo), ~ . - mean(., na.rm = TRUE)))
data_centered <- data %>%
dplyr::mutate(across(c(dxa, vo2max, hr_max, ppo), ~ . - mean(., na.rm = TRUE))) %>%
dplyr::mutate(across(c(dxa, vo2max, hr_max, ppo), ~ scale(.)))
View(data_centered)
names(data_centered)
View(data_centered)
data_centered_scaled <- data %>%
dplyr::mutate(across(c(dxa, vo2max, hr_max, ppo), ~ . - mean(., na.rm = TRUE))) %>%
dplyr::mutate(across(c(dxa, vo2max, hr_max, ppo), ~ scale(.)))
df <- data_centered_scaled %>%
tidyr::pivot_longer(
cols = -c(id, visit),
names_to = "measurement",
values_to = "value"
)
data_centered_scaled <- data %>%
dplyr::mutate(across(c(dxa, vo2max, hr_max, ppo), ~ scale(.)))
View(data_centered_scaled)
data_centered_scaled <- data %>%
dplyr::mutate(across(c(dxa, vo2max, hr_max, ppo), ~ as.vector(scale(.))))
df <- data_centered_scaled %>%
tidyr::pivot_longer(
cols = -c(id, visit),
names_to = "measurement",
values_to = "value"
)
df_centered_scaled <- data_centered_scaled %>%
tidyr::pivot_longer(
cols = -c(id, visit),
names_to = "measurement",
values_to = "value"
)
df_ <- data %>%
tidyr::pivot_longer(
cols = -c(id, visit),
names_to = "measurement",
values_to = "value"
)
df <- data %>%
tidyr::pivot_longer(
cols = -c(id, visit),
names_to = "measurement",
values_to = "value"
)
View(df)
df_centered_scaled <- data_centered_scaled %>%
tidyr::pivot_longer(
cols = -c(id, visit),
names_to = "measurement",
values_to = "value"
)
ggplot(df_centerd_scaled, aes(x = value))+
geom_density()
ggplot(df_centered_scaled, aes(x = value))+
geom_density()
ggplot(df_centered_scaled, aes(x = value, color = measurement))+
geom_density()
